// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*! 
 * @file JointTrajectorySubscriber.h
 * This header file contains the declaration of the subscriber functions.
 *
 * This file was generated by the tool fastcdrgen.
 */


#ifndef _JOINTTRAJECTORY_SUBSCRIBER_H_
#define _JOINTTRAJECTORY_SUBSCRIBER_H_

#include <fastrtps/fastrtps_fwd.h>
#include <fastrtps/subscriber/SubscriberListener.h>
#include <fastrtps/subscriber/SampleInfo.h>
#include "JointTrajectoryPubSubTypes.h"

using namespace eprosima::fastrtps;

class JointTrajectorySubscriber 
{
public:
	JointTrajectorySubscriber();
	virtual ~JointTrajectorySubscriber();
	bool init();
	void run();

    static void printTraj(MyMsg::JointTrajectory& traj);

private:
	Participant *participant_;
	Subscriber *subscriber_;
	
	class SubListener : public SubscriberListener
	{
	public:
		SubListener() : matchedCnt_(0), msgCnt_(0){};
		~SubListener(){};
		void onSubscriptionMatched(Subscriber* sub, MatchingInfo& info);
		void onNewDataMessage(Subscriber* sub);
		SampleInfo_t info_;
		int matchedCnt_;
		int msgCnt_;
	} listener_;
	JointTrajectoryPubSubType myType_;
};

#endif // _JointTrajectory_SUBSCRIBER_H_